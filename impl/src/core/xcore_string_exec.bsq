//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

//The core namespace implements the primitive concepts used in the bosque core language
namespace Core;

#if EXEC_LIBS
internal entity StringOps provides Some {
    function s_strconcat(l: List<String>): String {
        if(ListOps::s_empty<String>(l)) {
            return "";
        }
        else {
            let istr = ListOps::s_get_front<String>(l);
            let tl = ListOps::s_pop_front<String>(l);
            if(ListOps::s_empty<String>(tl)) {
                return istr;
            }
            else {
                return ListOps::s_reduce<String, String>(tl, istr, fn(acc: String, s: String): String => acc.append(s));
            }
        }
    }

    function s_strjoin(l: List<String>, sep: String): String {
        if(ListOps::s_empty<String>(l)) {
            return "";
        }
        else {
            let istr = ListOps::s_get_front<String>(l);
            let tl = ListOps::s_pop_front<String>(l);
            if(ListOps::s_empty<String>(tl)) {
                return istr;
            }
            else {
                return ListOps::s_reduce<String, String>(tl, istr, fn(acc: String, s: String): String => acc.append(sep).append(s));
            }
        }
    }
}
#endif

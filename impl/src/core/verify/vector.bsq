//-------------------------------------------------------------------------------------------------------
// Copyright (C) Microsoft. All rights reserved.
// Licensed under the MIT license. See LICENSE.txt file in the project root for full license information.
//-------------------------------------------------------------------------------------------------------

//The core namespace implements the primitive concepts used in the bosque core language
namespace NSCore;

__internal struct entity Vector<T, literal K=Nat> provides Object, Expandoable<T>, APIType when T APIType {
    private function s_unsafe_get(l: Vector<T, K>, i: Nat): T # vector_unsafe_get

    method size(): Nat {
        return literal(K);
    }

    method empty(): Bool {
        return literal(K) == 0n;
    }

    method front(): T 
        requires release literal(K) != 0n;
    {
        return Vector<T, K>::s_unsafe_get(this, 0n);
    }

    method back(): T 
        requires release literal(K) != 0n;
    {
        return Vector<T, K>::s_unsafe_get(this, literal(K) - 1n);
    }

    method get(i: Nat): T 
        requires release 0n <= i && i < literal(K);
    {
        return Vector<T, K>::s_unsafe_get(this, i);
    }
}
